--- original\CC-Tweaked\src\main\java\dan200\computercraft\core\apis\handles\EncodedWritableHandle.java
+++ src\main\java\dan200\computercraft\core\apis\handles\EncodedWritableHandle.java
@@ -14,23 +14,24 @@
 import java.io.Closeable;
 import java.io.IOException;
 import java.nio.channels.Channels;
-import java.nio.channels.WritableByteChannel;
+import java.io.OutputStreamWriter;
+import java.io.Writer;
+import cc.squiddev.cct.stub.WritableByteChannel;
 import java.nio.charset.Charset;
 import java.nio.charset.CharsetEncoder;
 import java.nio.charset.CodingErrorAction;
-import java.nio.charset.StandardCharsets;
 
 public class EncodedWritableHandle extends HandleGeneric
 {
-    private BufferedWriter m_writer;
+    private Writer m_writer;
 
-    public EncodedWritableHandle( @Nonnull BufferedWriter writer, @Nonnull Closeable closable )
+    public EncodedWritableHandle( @Nonnull Writer writer, @Nonnull Closeable closable )
     {
         super( closable );
         m_writer = writer;
     }
 
-    public EncodedWritableHandle( @Nonnull BufferedWriter writer )
+    public EncodedWritableHandle( @Nonnull Writer writer )
     {
         this( writer, writer );
     }
@@ -73,7 +74,7 @@
                 try
                 {
                     m_writer.write( text, 0, text.length() );
-                    m_writer.newLine();
+                    m_writer.write( '\n' );
                     return null;
                 }
                 catch( IOException e )
@@ -102,9 +103,9 @@
     }
 
 
-    public static BufferedWriter openUtf8( WritableByteChannel channel )
+    public static Writer openUtf8(WritableByteChannel channel )
     {
-        return open( channel, StandardCharsets.UTF_8 );
+        return new OutputStreamWriter(channel.asOutputStream());
     }
 
     public static BufferedWriter open( WritableByteChannel channel, Charset charset )
@@ -114,6 +115,6 @@
         CharsetEncoder encoder = charset.newEncoder()
             .onMalformedInput( CodingErrorAction.REPLACE )
             .onUnmappableCharacter( CodingErrorAction.REPLACE );
-        return new BufferedWriter( Channels.newWriter( channel, encoder, -1 ) );
+        return new BufferedWriter( Channels.newWriter( null, encoder, -1 ) );
     }
 }
