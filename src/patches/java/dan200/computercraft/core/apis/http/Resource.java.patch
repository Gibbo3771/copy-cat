--- original\CC-Tweaked\src\main\java\dan200\computercraft\core\apis\http\Resource.java
+++ src\main\java\dan200\computercraft\core\apis\http\Resource.java
@@ -7,8 +7,6 @@
 package dan200.computercraft.core.apis.http;
 
 import dan200.computercraft.shared.util.IoUtil;
-import io.netty.channel.Channel;
-import io.netty.channel.ChannelFuture;
 
 import java.io.Closeable;
 import java.lang.ref.Reference;
@@ -23,7 +21,7 @@
  */
 public abstract class Resource<T extends Resource<T>> implements Closeable
 {
-    private final AtomicBoolean closed = new AtomicBoolean( false );
+    private boolean closed = false;
     private final ResourceGroup<T> limiter;
 
     protected Resource( ResourceGroup<T> limiter )
@@ -38,7 +36,7 @@
      */
     public final boolean isClosed()
     {
-        return closed.get();
+        return closed;
     }
 
     /**
@@ -47,7 +45,7 @@
      */
     public final boolean checkClosed()
     {
-        if( !closed.get() ) return false;
+        if( !closed ) return false;
         dispose();
         return true;
     }
@@ -59,7 +57,8 @@
      */
     protected final boolean tryClose()
     {
-        if( closed.getAndSet( true ) ) return false;
+        if( closed ) return false;
+        closed = true;
         dispose();
         return true;
     }
@@ -105,6 +104,7 @@
         return null;
     }
 
+    /*
     protected static ChannelFuture closeChannel( ChannelFuture future )
     {
         if( future != null )
@@ -122,8 +122,8 @@
         if( future != null ) future.cancel( true );
         return null;
     }
+    */
 
-
     private static final ReferenceQueue<Object> QUEUE = new ReferenceQueue<>();
 
     private static class CloseReference<T> extends WeakReference<T>
