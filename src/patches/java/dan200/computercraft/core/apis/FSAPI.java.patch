--- original\CC-Tweaked\src\main\java\dan200\computercraft\core\apis\FSAPI.java
+++ src\main\java\dan200\computercraft\core\apis\FSAPI.java
@@ -21,8 +21,10 @@
 import javax.annotation.Nonnull;
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
-import java.nio.channels.ReadableByteChannel;
-import java.nio.channels.WritableByteChannel;
+import cc.squiddev.cct.stub.ReadableByteChannel;
+import cc.squiddev.cct.stub.WritableByteChannel;
+
+import java.io.Writer;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.function.Function;
@@ -255,13 +257,13 @@
                         case "w":
                         {
                             // Open the file for writing, then create a wrapper around the writer
-                            FileSystemWrapper<BufferedWriter> writer = m_fileSystem.openForWrite( path, false, EncodedWritableHandle::openUtf8 );
+                            FileSystemWrapper<Writer> writer = m_fileSystem.openForWrite( path, false, EncodedWritableHandle::openUtf8 );
                             return new Object[] { new EncodedWritableHandle( writer.get(), writer ) };
                         }
                         case "a":
                         {
                             // Open the file for appending, then create a wrapper around the writer
-                            FileSystemWrapper<BufferedWriter> writer = m_fileSystem.openForWrite( path, true, EncodedWritableHandle::openUtf8 );
+                            FileSystemWrapper<Writer> writer = m_fileSystem.openForWrite( path, true, EncodedWritableHandle::openUtf8 );
                             return new Object[] { new EncodedWritableHandle( writer.get(), writer ) };
                         }
                         case "rb":
