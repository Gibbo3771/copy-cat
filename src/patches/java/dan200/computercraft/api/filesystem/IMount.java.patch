--- original\CC-Tweaked\src\main\java\dan200\computercraft\api\filesystem\IMount.java
+++ src\main\java\dan200\computercraft\api\filesystem\IMount.java
@@ -5,15 +5,12 @@
  */
 package dan200.computercraft.api.filesystem;
 
-import dan200.computercraft.api.ComputerCraftAPI;
 import dan200.computercraft.api.peripheral.IComputerAccess;
-import net.minecraft.world.World;
 
 import javax.annotation.Nonnull;
 import java.io.IOException;
 import java.io.InputStream;
-import java.nio.channels.Channels;
-import java.nio.channels.ReadableByteChannel;
+import cc.squiddev.cct.stub.ReadableByteChannel;
 import java.util.List;
 
 /**
@@ -67,7 +64,7 @@
      */
     long getSize( @Nonnull String path ) throws IOException;
 
-    /**
+    /*
      * Opens a file with a given path, and returns an {@link InputStream} representing its contents.
      *
      * @param path A file path in normalised format, relative to the mount location. ie: "programs/myprogram".
@@ -75,9 +72,11 @@
      * @throws IOException If the file does not exist, or could not be opened.
      * @deprecated Use {@link #openChannelForRead(String)} instead
      */
+    /*
     @Nonnull
     @Deprecated
     InputStream openForRead( @Nonnull String path ) throws IOException;
+    */
 
     /**
      * Opens a file with a given path, and returns an {@link ReadableByteChannel} representing its contents.
@@ -89,8 +88,5 @@
      * @throws IOException If the file does not exist, or could not be opened.
      */
     @Nonnull
-    default ReadableByteChannel openChannelForRead( @Nonnull String path ) throws IOException
-    {
-        return Channels.newChannel( openForRead( path ) );
-    }
+    ReadableByteChannel openChannelForRead( @Nonnull String path ) throws IOException;
 }
