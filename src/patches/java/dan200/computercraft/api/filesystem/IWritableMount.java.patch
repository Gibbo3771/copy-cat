--- original\CC-Tweaked\src\main\java\dan200\computercraft\api\filesystem\IWritableMount.java
+++ src\main\java\dan200\computercraft\api\filesystem\IWritableMount.java
@@ -5,15 +5,13 @@
  */
 package dan200.computercraft.api.filesystem;
 
-import dan200.computercraft.api.ComputerCraftAPI;
 import dan200.computercraft.api.peripheral.IComputerAccess;
-import net.minecraft.world.World;
 
 import javax.annotation.Nonnull;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.nio.channels.Channels;
-import java.nio.channels.WritableByteChannel;
+import cc.squiddev.cct.stub.WritableByteChannel;
 
 /**
  * Represents a part of a virtual filesystem that can be mounted onto a computer using {@link IComputerAccess#mount(String, IMount)}
@@ -45,7 +43,7 @@
      */
     void delete( @Nonnull String path ) throws IOException;
 
-    /**
+    /*
      * Opens a file with a given path, and returns an {@link OutputStream} for writing to it.
      *
      * @param path A file path in normalised format, relative to the mount location. ie: "programs/myprogram".
@@ -53,9 +51,11 @@
      * @throws IOException If the file could not be opened for writing.
      * @deprecated Use {@link #openChannelForWrite(String)} instead.
      */
+    /*
     @Nonnull
     @Deprecated
     OutputStream openForWrite( @Nonnull String path ) throws IOException;
+    */
 
     /**
      * Opens a file with a given path, and returns an {@link OutputStream} for writing to it.
@@ -66,12 +66,9 @@
      * @throws IOException If the file could not be opened for writing.
      */
     @Nonnull
-    default WritableByteChannel openChannelForWrite( @Nonnull String path ) throws IOException
-    {
-        return Channels.newChannel( openForWrite( path ) );
-    }
+    WritableByteChannel openChannelForWrite( @Nonnull String path ) throws IOException;
 
-    /**
+    /*
      * Opens a file with a given path, and returns an {@link OutputStream} for appending to it.
      *
      * @param path A file path in normalised format, relative to the mount location. ie: "programs/myprogram".
@@ -79,9 +76,11 @@
      * @throws IOException If the file could not be opened for writing.
      * @deprecated Use {@link #openChannelForAppend(String)} instead.
      */
+    /*
     @Nonnull
     @Deprecated
     OutputStream openForAppend( @Nonnull String path ) throws IOException;
+    */
 
     /**
      * Opens a file with a given path, and returns an {@link OutputStream} for appending to it.
@@ -92,10 +91,7 @@
      * @throws IOException If the file could not be opened for writing.
      */
     @Nonnull
-    default WritableByteChannel openChannelForAppend( @Nonnull String path ) throws IOException
-    {
-        return Channels.newChannel( openForAppend( path ) );
-    }
+    WritableByteChannel openChannelForAppend( @Nonnull String path ) throws IOException;
 
     /**
      * Get the amount of free space on the mount, in bytes. You should decrease this value as the user writes to the
